"""empty message

Revision ID: 3c02f8d49dd5
Revises: 9099b08d2bb3
Create Date: 2023-06-19 20:51:19.813668

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "3c02f8d49dd5"
down_revision = "9099b08d2bb3"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "classifier_history",
        sa.Column("classifier_history_id", sa.INTEGER(), nullable=False),
        sa.Column("classifier_id", sa.INTEGER(), nullable=True),
        sa.Column("transaction_id", sa.BIGINT(), nullable=True),
        sa.Column("category_id", sa.INTEGER(), nullable=True),
        sa.Column("predicted_category_id", sa.INTEGER(), nullable=True),
        sa.Column("accurate", sa.SMALLINT(), nullable=True),
        sa.Column(
            "created_on",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["classifier_id"],
            ["classifiers.classifier_id"],
            name=op.f("fk_classifier_history_classifier_id_classifiers"),
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transactions.transaction_id"],
            name=op.f("fk_classifier_history_transaction_id_transactions"),
        ),
        sa.PrimaryKeyConstraint(
            "classifier_history_id", name=op.f("pk_classifier_history")
        ),
    )
    with op.batch_alter_table("classifier_history", schema=None) as batch_op:
        batch_op.create_index(
            "ix_classifier_history",
            ["classifier_id"],
            unique=False,
            postgresql_include=["accurate"],
        )
        batch_op.create_index(
            batch_op.f("ix_classifier_history_classifier_id"),
            ["classifier_id"],
            unique=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("classifier_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_classifier_history_classifier_id"))
        batch_op.drop_index("ix_classifier_history", postgresql_include=["accurate"])

    op.drop_table("classifier_history")
    # ### end Alembic commands ###
